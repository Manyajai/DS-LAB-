#include<stdio.h>
void bfs(int);
int a[10][10], vis[10], n;

void main()
{
    int i, j, src;
    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix:\n");
    for (i = 1; i <= n; i++) {
        for (j = 1; j <= n; j++) {
            scanf("%d", &a[i][j]);
        }
        vis[i] = 0; // Initialize all vertices as not visited
    }

    printf("Enter the source vertex: ");
    scanf("%d", &src);

    printf("Nodes reachable from source vertex %d: ", src);
    bfs(src);

    // Print name and USN
    printf("\nName: Manya Jain\nUSN: 1BM23CS371\n");
}

void bfs(int v)
{
    int q[10], f = 0, r = 0, u, i;
    q[r] = v; // Enqueue the source vertex
    vis[v] = 1; // Mark it as visited

    while (f <= r) {
        u = q[f]; // Dequeue a vertex
        printf("%d ", u);
        f++;

        // Check all adjacent vertices of the dequeued vertex
        for (i = 1; i <= n; i++) {
            if (a[u][i] == 1 && vis[i] == 0) { // If the vertex is connected and not visited
                vis[i] = 1; // Mark as visited
                r++; // Enqueue the vertex
                q[r] = i;
            }
        }
    }
    printf("\n");
}
